// Generated by data binding compiler. Do not edit!
package com.tools.edge.dynamic.island.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.tools.edge.dynamic.island.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentHomeBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintBunny;

  @NonNull
  public final ConstraintLayout constraintContainer;

  @NonNull
  public final ConstraintLayout constraintOval;

  @NonNull
  public final AppCompatImageView imgDynamicBunny;

  @NonNull
  public final AppCompatImageView imgDynamicOval;

  @NonNull
  public final AppCompatImageView imgHeightBottom;

  @NonNull
  public final AppCompatImageView imgHeightTop;

  @NonNull
  public final AppCompatImageView imgHorizontalLeft;

  @NonNull
  public final AppCompatImageView imgHorizontalRight;

  @NonNull
  public final AppCompatImageView imgTick;

  @NonNull
  public final AppCompatImageView imgTickBunny;

  @NonNull
  public final AppCompatImageView imgVerticalBottom;

  @NonNull
  public final AppCompatImageView imgVerticalTop;

  @NonNull
  public final AppCompatImageView imgWidthBottom;

  @NonNull
  public final AppCompatImageView imgWidthTop;

  @NonNull
  public final AppCompatImageView imvHomeSettings;

  @NonNull
  public final RelativeLayout rltBunny;

  @NonNull
  public final RelativeLayout rltHeight;

  @NonNull
  public final RelativeLayout rltHorizontal;

  @NonNull
  public final RelativeLayout rltOval;

  @NonNull
  public final RelativeLayout rltVertical;

  @NonNull
  public final RelativeLayout rltWidth;

  @NonNull
  public final SeekBar seekbarHeight;

  @NonNull
  public final SeekBar seekbarHorizontal;

  @NonNull
  public final SeekBar seekbarVertical;

  @NonNull
  public final SeekBar seekbarWidth;

  @NonNull
  public final SwitchMaterial switchDisplayNotch;

  @NonNull
  public final AppCompatTextView tvApplyBunny;

  @NonNull
  public final AppCompatTextView tvApplyOval;

  @NonNull
  public final AppCompatTextView tvDynamicIsland;

  @NonNull
  public final AppCompatTextView tvHeight;

  @NonNull
  public final AppCompatTextView tvHorizontal;

  @NonNull
  public final AppCompatTextView tvNotchPosition;

  @NonNull
  public final AppCompatTextView tvNotchSize;

  @NonNull
  public final AppCompatTextView tvNotchStyle;

  @NonNull
  public final AppCompatTextView tvResetPosition;

  @NonNull
  public final AppCompatTextView tvResetSize;

  @NonNull
  public final AppCompatTextView tvVertical;

  @NonNull
  public final AppCompatTextView tvWidth;

  @NonNull
  public final View viewFake;

  protected FragmentHomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintBunny, ConstraintLayout constraintContainer,
      ConstraintLayout constraintOval, AppCompatImageView imgDynamicBunny,
      AppCompatImageView imgDynamicOval, AppCompatImageView imgHeightBottom,
      AppCompatImageView imgHeightTop, AppCompatImageView imgHorizontalLeft,
      AppCompatImageView imgHorizontalRight, AppCompatImageView imgTick,
      AppCompatImageView imgTickBunny, AppCompatImageView imgVerticalBottom,
      AppCompatImageView imgVerticalTop, AppCompatImageView imgWidthBottom,
      AppCompatImageView imgWidthTop, AppCompatImageView imvHomeSettings, RelativeLayout rltBunny,
      RelativeLayout rltHeight, RelativeLayout rltHorizontal, RelativeLayout rltOval,
      RelativeLayout rltVertical, RelativeLayout rltWidth, SeekBar seekbarHeight,
      SeekBar seekbarHorizontal, SeekBar seekbarVertical, SeekBar seekbarWidth,
      SwitchMaterial switchDisplayNotch, AppCompatTextView tvApplyBunny,
      AppCompatTextView tvApplyOval, AppCompatTextView tvDynamicIsland, AppCompatTextView tvHeight,
      AppCompatTextView tvHorizontal, AppCompatTextView tvNotchPosition,
      AppCompatTextView tvNotchSize, AppCompatTextView tvNotchStyle,
      AppCompatTextView tvResetPosition, AppCompatTextView tvResetSize,
      AppCompatTextView tvVertical, AppCompatTextView tvWidth, View viewFake) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintBunny = constraintBunny;
    this.constraintContainer = constraintContainer;
    this.constraintOval = constraintOval;
    this.imgDynamicBunny = imgDynamicBunny;
    this.imgDynamicOval = imgDynamicOval;
    this.imgHeightBottom = imgHeightBottom;
    this.imgHeightTop = imgHeightTop;
    this.imgHorizontalLeft = imgHorizontalLeft;
    this.imgHorizontalRight = imgHorizontalRight;
    this.imgTick = imgTick;
    this.imgTickBunny = imgTickBunny;
    this.imgVerticalBottom = imgVerticalBottom;
    this.imgVerticalTop = imgVerticalTop;
    this.imgWidthBottom = imgWidthBottom;
    this.imgWidthTop = imgWidthTop;
    this.imvHomeSettings = imvHomeSettings;
    this.rltBunny = rltBunny;
    this.rltHeight = rltHeight;
    this.rltHorizontal = rltHorizontal;
    this.rltOval = rltOval;
    this.rltVertical = rltVertical;
    this.rltWidth = rltWidth;
    this.seekbarHeight = seekbarHeight;
    this.seekbarHorizontal = seekbarHorizontal;
    this.seekbarVertical = seekbarVertical;
    this.seekbarWidth = seekbarWidth;
    this.switchDisplayNotch = switchDisplayNotch;
    this.tvApplyBunny = tvApplyBunny;
    this.tvApplyOval = tvApplyOval;
    this.tvDynamicIsland = tvDynamicIsland;
    this.tvHeight = tvHeight;
    this.tvHorizontal = tvHorizontal;
    this.tvNotchPosition = tvNotchPosition;
    this.tvNotchSize = tvNotchSize;
    this.tvNotchStyle = tvNotchStyle;
    this.tvResetPosition = tvResetPosition;
    this.tvResetSize = tvResetSize;
    this.tvVertical = tvVertical;
    this.tvWidth = tvWidth;
    this.viewFake = viewFake;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_home, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentHomeBinding>inflateInternal(inflater, R.layout.fragment_home, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_home, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentHomeBinding>inflateInternal(inflater, R.layout.fragment_home, null, false, component);
  }

  public static FragmentHomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentHomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentHomeBinding)bind(component, view, R.layout.fragment_home);
  }
}
